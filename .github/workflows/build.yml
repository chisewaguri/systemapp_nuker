name: build

on:
  push:
    branches:
      - master
    tags:
      - '*'
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
      - 'update.json'
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0

    - name: Set variables
      run: |
        COMMIT_NUM=$(git rev-list --count HEAD)
        COMMIT_HASH=$(git rev-parse --short HEAD)
        VERSION=$(jq -r .version update.json)
        ZIP_NAME=SAN_$VERSION-$COMMIT_NUM-$COMMIT_HASH
        RELEASE_ZIP_NAME=SAN_$VERSION
        
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
        echo "RELEASE_ZIP_NAME=$RELEASE_ZIP_NAME" >> $GITHUB_ENV

    - name: Extract changelog for version
      if: github.ref_type == 'tag'
      run: |
        # Extract changelog for the specific version from CHANGELOG.md
        CHANGELOG=$(awk -v version="v${{ env.VERSION }}" '
        BEGIN { found=0; content="" }
        /^### v[0-9]+\.[0-9]+\.[0-9]+/ {
          if (found) exit
          if ($0 ~ "### " version) {
            found=1
            next
          }
        }
        found && /^### v[0-9]+\.[0-9]+\.[0-9]+/ { exit }
        found && !/^---$/ { 
          if (content == "") {
            content = $0
          } else {
            content = content "\n" $0
          }
        }
        END { print content }
        ' CHANGELOG.md)
        
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        echo "$CHANGELOG" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create dummy zip
      run: |
        # Create dummy zip
        cd module/dummy_zip
        cp -r ../META-INF .
        zip -r dummy.zip *
        mv dummy.zip ../
        
    - name: Create module zip for release
      if: github.ref_type == 'tag'
      run: |
        cd module
        zip -r "${{ env.RELEASE_ZIP_NAME }}" *
        mv "${{ env.RELEASE_ZIP_NAME }}" ../

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ZIP_NAME }}
        path: |
          module/
          !module/dummy_zip

    - name: Create release
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        name: ${{ env.VERSION }}
        body: ${{ env.CHANGELOG }}
        draft: false
        files: ${{ env.RELEASE_ZIP_NAME }}